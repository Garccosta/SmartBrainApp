{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bill\\\\Documents\\\\WebDev\\\\SmartBrainApp\\\\frontend\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: 'e85d9c50c64c4e96a9088f20f8644251'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 600\n      }\n    }\n  },\n  \"interactivity\": {\n    \"detect_on\": \"window\",\n    \"events\": {\n      \"onhover\": {\n        \"enable\": true,\n        \"mode\": \"bubble\"\n      },\n      \"resize\": true\n    },\n    \"modes\": {\n      \"bubble\": {\n        \"distance\": 400,\n        \"size\": 4,\n        \"duration\": 2,\n        \"opacity\": 0.8,\n        \"speed\": 3\n      },\n      \"repulse\": {\n        \"distance\": 200,\n        \"duration\": 0.8\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signIn',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      const {\n        id,\n        name,\n        email,\n        entries,\n        joined\n      } = data;\n      this.setState({\n        user: {\n          id,\n          name,\n          email,\n          entries,\n          joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      console.log(clarifaiFace, image, width, height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onPictureSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict('c0c0ac362b03416da06ab3fa36fb58e3', this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3333/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signOut') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }), route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onPictureSubmit: this.onPictureSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    })) : route === 'signIn' ? /*#__PURE__*/React.createElement(SignIn, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 19\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Bill/Documents/WebDev/SmartBrainApp/frontend/src/App.js"],"names":["React","Component","Clarifai","Navigation","FaceRecognition","Logo","ImageLinkForm","Rank","Particles","SignIn","Register","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","console","log","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","onPictureSubmit","state","models","predict","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","onRouteChange","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\n \nimport './App.css';\n\nconst app = new Clarifai.App({\n  apiKey: 'e85d9c50c64c4e96a9088f20f8644251'\n });\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value:80,\n      density: {\n        enable: true,\n        value_area: 600\n      }\n    }\n  },\n  \"interactivity\": {\n    \"detect_on\": \"window\",\n    \"events\": {\n      \"onhover\": {\n        \"enable\": true,\n        \"mode\": \"bubble\"\n      },\n      \"resize\": true\n    },\n    \"modes\": {\n      \"bubble\": {\n        \"distance\": 400,\n        \"size\": 4,\n        \"duration\": 2,\n        \"opacity\": 0.8,\n        \"speed\": 3\n      },\n      \"repulse\": {\n        \"distance\": 200,\n        \"duration\": 0.8\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route : 'signIn',\n  isSignedIn: false,\n  user: {\n      id: '',\n      name:'',\n      email: '',\n      entries: 0,\n      joined: ''\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    const { id, name, email, entries, joined } = data;\n    this.setState({user:{\n      id,\n      name,\n      email,\n      entries,\n      joined\n    }})\n  }\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log(clarifaiFace, image, width, height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height\n    }\n  }\n\n  displayFaceBox  = (box) => {\n    this.setState({box:box})\n  }\n\n  onInputChange = (event) => {\n      this.setState({input: event.target.value});\n    };\n\n  onPictureSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    app.models\n    .predict( \n    'c0c0ac362b03416da06ab3fa36fb58e3', \n    this.state.input)\n    .then(response => {\n      if(response){\n        fetch('http://localhost:3333/image', {\n          method: 'put',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n              id: this.state.user.id\n          })\n      })\n      .then(response => response.json())\n      .then(count => {\n        this.setState(Object.assign(this.state.user,{ entries: count}))\n      })\n      .catch(console.log);\n    }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n      .catch(err => console.log(err)); \n    };\n\n    onRouteChange = (route) => {\n      if (route === 'signOut'){\n        this.setState(initialState);\n      } else if ( route === 'home'){\n        this.setState({isSignedIn: true});\n      }\n      this.setState({route: route});\n    }\n\n    render() {\n      const {isSignedIn, imageUrl, route, box } = this.state;\n      return (\n        <div className=\"App\">\n          <Particles className='particles' params={particlesOptions}/>\n          <Navigation isSignedIn={isSignedIn} onRouteChange = {this.onRouteChange} />\n          { route === 'home'    \n            ? <div>\n                <Logo />\n                <Rank name = {this.state.user.name} entries = {this.state.user.entries} />\n                <ImageLinkForm \n                  onInputChange={this.onInputChange} \n                  onPictureSubmit={this.onPictureSubmit}\n                />\n                <FaceRecognition box={box} imageUrl={imageUrl}/>\n              </div>\n            \n            : (\n                route === 'signIn' ?\n                <SignIn loadUser = {this.loadUser} onRouteChange = {this.onRouteChange} /> \n                : <Register loadUser = {this.loadUser} onRouteChange = {this.onRouteChange}/>\n              )\n          }\n          </div>\n      );\n    } \n} \n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}