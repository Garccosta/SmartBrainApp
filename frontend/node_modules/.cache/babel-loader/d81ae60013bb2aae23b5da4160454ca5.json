{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bill\\\\Documents\\\\WebDev\\\\SmartBrainApp\\\\frontend\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: 'e85d9c50c64c4e96a9088f20f8644251'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 600\n      }\n    }\n  },\n  \"interactivity\": {\n    \"detect_on\": \"window\",\n    \"events\": {\n      \"onhover\": {\n        \"enable\": true,\n        \"mode\": \"bubble\"\n      },\n      \"resize\": true\n    },\n    \"modes\": {\n      \"bubble\": {\n        \"distance\": 400,\n        \"size\": 4,\n        \"duration\": 2,\n        \"opacity\": 0.8,\n        \"speed\": 3\n      },\n      \"repulse\": {\n        \"distance\": 200,\n        \"duration\": 0.8\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      const id = data.id,\n            name = data.name,\n            email = data.email,\n            entries = data.entries,\n            joined = data.joined;\n      this.setState({\n        user: {\n          id,\n          name,\n          email,\n          entries,\n          joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onPictureSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState({\n              users: {\n                entries: count\n              }\n            });\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signOut') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signIn',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          imageUrl = _this$state.imageUrl,\n          route = _this$state.route,\n          box = _this$state.box;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onPictureSubmit: this.onPictureSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })) : route === 'signIn' ? React.createElement(SignIn, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Bill/Documents/WebDev/SmartBrainApp/frontend/src/App.js"],"names":["React","Component","Clarifai","Navigation","FaceRecognition","Logo","ImageLinkForm","Rank","Particles","SignIn","Register","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","loadUser","data","id","name","email","entries","joined","setState","user","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","console","log","onInputChange","event","input","target","onPictureSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","users","catch","err","onRouteChange","route","isSignedIn","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\n \nimport './App.css';\n\nconst app = new Clarifai.App({\n  apiKey: 'e85d9c50c64c4e96a9088f20f8644251'\n });\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value:80,\n      density: {\n        enable: true,\n        value_area: 600\n      }\n    }\n  },\n  \"interactivity\": {\n    \"detect_on\": \"window\",\n    \"events\": {\n      \"onhover\": {\n        \"enable\": true,\n        \"mode\": \"bubble\"\n      },\n      \"resize\": true\n    },\n    \"modes\": {\n      \"bubble\": {\n        \"distance\": 400,\n        \"size\": 4,\n        \"duration\": 2,\n        \"opacity\": 0.8,\n        \"speed\": 3\n      },\n      \"repulse\": {\n        \"distance\": 200,\n        \"duration\": 0.8\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route : 'signIn',\n      isSignedIn: false,\n      user: {\n          id: '',\n          name:'',\n          email: '',\n          entries: 0,\n          joined: ''\n      }\n    }\n  }\n\n  loadUser = (data) => {\n    const { id, name, email, entries, joined } = data;\n    this.setState({user:{\n      id,\n      name,\n      email,\n      entries,\n      joined\n    }})\n  }\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    \n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height\n    }\n  }\n\n  displayFaceBox  = (box) => {\n    console.log(box);\n    this.setState({box:box})\n  }\n\n  onInputChange = (event) => {\n      this.setState({input: event.target.value});\n    };\n\n    onPictureSubmit = () => {\n      this.setState({imageUrl: this.state.input});\n      app.models\n      .predict(\n      Clarifai.FACE_DETECT_MODEL, \n      this.state.input)\n      .then(response => {\n        if(response){\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                id: this.state.user.id\n            })\n        })\n        .then(response => response.json())\n        .then(count => {\n          this.setState({users: {\n            entries: count\n          }})\n        })\n      }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n      .catch(err => console.log(err)); \n    };\n\n    onRouteChange = (route) => {\n      if (route === 'signOut'){\n        this.setState({isSignedIn: false});\n      } else if ( route === 'home'){\n        this.setState({isSignedIn: true});\n      }\n      this.setState({route: route});\n    }\n\n    render() {\n      const {isSignedIn, imageUrl, route, box} = this.state;\n      return (\n        <div className=\"App\">\n          <Particles className='particles' params={particlesOptions}/>\n          <Navigation isSignedIn={isSignedIn} onRouteChange = {this.onRouteChange} />\n          { route === 'home'    \n            ? <div>\n                <Logo />\n                <Rank name = {this.state.user.name} entries = {this.state.user.entries} />\n                <ImageLinkForm \n                  onInputChange={this.onInputChange} \n                  onPictureSubmit={this.onPictureSubmit}\n                />\n                <FaceRecognition box={box} imageUrl={imageUrl}/>\n              </div>\n            \n            : (\n                route === 'signIn' ?\n                <SignIn loadUser = {this.loadUser} onRouteChange = {this.onRouteChange} /> \n                : <Register loadUser = {this.loadUser} onRouteChange = {this.onRouteChange}/>\n              )\n          }\n          </div>\n      );\n    } \n} \n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}